{
  "permissions": {
    "allow": [
      "Bash(cat /c/Users/kyria/yunicity-website/package.json)",
      "Bash(cat /c/Users/kyria/yunicity-website/tsconfig.json)",
      "Bash(cat /c/Users/kyria/yunicity-website/next.config.ts)",
      "Bash(tree /c/Users/kyria/yunicity-website/src -L 3)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/app/layout.tsx)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/app/page.tsx)",
      "Bash(cat /c/Users/kyria/yunicity-website/postcss.config.mjs)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/components/Navigation.tsx)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/components/Hero3D.tsx)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/components/ProblemeSection.tsx)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/components/SolutionSection.tsx)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/app/api/contact/route.ts)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/app/api/newsletter/route.ts)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/lib/supabase.ts)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/lib/email.ts)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/app/contact/page.tsx)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/components/Footer.tsx)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/components/EquipeSection.tsx)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/app/investir/page.tsx)",
      "Bash(cat /c/Users/kyria/yunicity-website/README.md)",
      "Bash(cat /c/Users/kyria/yunicity-website/.gitignore)",
      "Bash(cat /c/Users/kyria/yunicity-website/eslint.config.mjs)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/components/NewsletterSection.tsx)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/components/DecouverteReimsSection.tsx)",
      "Bash(cat /c/Users/kyria/yunicity-website/src/app/politique-confidentialite/page.tsx)",
      "Bash(xargs cat)",
      "Bash(git -C /c/Users/kyria/yunicity-website log --oneline -20)",
      "Bash(cat /c/Users/kyria/yunicity-website/CHANGELOG.md)",
      "Bash(npm run dev)",
      "Bash(ls c:/Users/kyria/yunicity-website/public/*.{jpg,jpeg,png,webp})",
      "Bash(for page in c:/Users/kyria/yunicity-website/src/app/{page.tsx,equipe/page.tsx,reims/page.tsx,solution/page.tsx,probleme/page.tsx,newsletter/page.tsx,investir/page.tsx,contact/page.tsx,politique-confidentialite/page.tsx,cgu/page.tsx,mentions-legales/page.tsx})",
      "Bash(do echo \"=== $page ===\")",
      "Bash(done)",
      "Bash(npm run build)",
      "Bash(git add .)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: production-ready website with complete redesign\n\nMajor Changes:\n- âœ… Redesigned all pages with consistent Apple/Tesla minimalist aesthetic\n- âœ… Created dedicated pages: ProblÃ¨me, Solution, Reims, Ã‰quipe, Newsletter, Investir\n- âœ… Each page follows 3-section pattern (Noir-Blanc-Noir)\n- âœ… Added Navigation + Footer + BackButton to all pages\n- âœ… Cleaned up unused files and dependencies\n\nNew Pages & Components:\n- Created ProblÃ¨me page with ProblemeSection\n- Created Solution page with SolutionSection  \n- Created Reims page (ReimsHeroCarousel, ReimsExperienceSection, ReimsCallToActionSection)\n- Created Ã‰quipe page (EquipeHeroSection, EquipeTeamSection, EquipeJoinSection)\n- Created Newsletter page (NewsletterHeroSection with iPhone conversation, NewsletterContentSection with Instagram Stories, NewsletterSubscribeSection)\n- Redesigned Investir page (InvestirHeroSection, InvestirOpportunitySection, InvestirContactSection)\n\nCleanup:\n- Removed deprecated components (EquipeSection, DecouverteReimsSection, MarcheSection, NewsletterSection)\n- Removed documentation files (CHANGELOG, SETUP, TEST_GUIDE, QR_CODE_GUIDE, etc.)\n- Removed unused public assets (SVG files, qr-code-generator.html)\n- Removed SQL schema files\n- Updated README with current structure\n\nBuild:\n- âœ… Production build successful\n- âœ… All pages render correctly\n- âœ… No blocking errors\n\nReady for Production! ðŸš€\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push origin master)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix: clean code - remove ESLint warnings\n\nCorrections:\n- âœ… SupprimÃ© imports inutilisÃ©s (AnimatePresence, useRef, MapPin)\n- âœ… RemplacÃ© types ''any'' par types spÃ©cifiques\n- âœ… OptimisÃ© images avec next/image (LCP + bandwidth)\n- âœ… AjoutÃ© i.ibb.co aux remotePatterns\n\nBuild:\n- âœ… 0 warnings ESLint\n- âœ… Compilation rÃ©ussie\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
